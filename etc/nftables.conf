#!/usr/bin/nft -f

flush ruleset

# Interfaces
define iface_internal = eth1
define iface_modem = eth2

# local networks
define lan_net_v4 = 10.3.10.0/24
#WIP define lan_nets_v6 = {fd00::/64}

# Some local hosts
define webif_v4 = 10.2.10.1
define fw_v4 = 10.3.10.1

table inet filter {
  chain input {
    type filter hook input priority 0; policy drop;

    # conntrack
    ct state established,related accept
    ct state invalid drop

    # localhost
    iifname lo accept

    # ICMP & IGMP
    icmpv6 type {destination-unreachable, packet-too-big, time-exceeded, parameter-problem, mld-listener-query, mld-listener-report, mld-listener-done, nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, ind-neighbor-solicit, ind-neighbor-advert, mld2-listener-report, echo-request, echo-reply} accept
    ip protocol icmp icmp type {destination-unreachable, router-advertisement, router-solicitation, time-exceeded, parameter-problem, echo-reply, echo-request} accept
    ip protocol igmp accept

    ############### PORTS - TCP ###############

    tcp dport {
        # SSH
        22,
        # SMTP
        25,
        # Bind9
        53,
        # HTTP
        80,
        # IMAP
        143,
        # HTTP/s
        443,
        # SMTP SSL/TLS
        465,
        # SMTP MSA
        587,
        # IMAP Encrypted
        993,
        # SAMP
        7777,
        # Minecraft
        25565,
        # TeamSpeak 3 Filetransfer
        30033,
        # BeamMP
        30814
	} accept

    ############### PORTS - UDP ###############

    udp dport {
	# Bind9
	53,
	# HTTP
	80,
	# HTTP/s
	443,
        # Allow DHCPv6 replies
        # see https://github.com/openwrt/openwrt/issues/5066
        546,
	# TeamSpeak Voice
	9987,
	# GTA SAMP
	7777,
	# BeamMP
	30814,
	# WireGuard
	51820
    } accept

    ############### PORTS - END ###############

    # Unbound
    iifname $iface_internal tcp dport domain accept
    iifname $iface_internal udp dport domain accept

    # DHCP
    iifname $iface_internal udp dport {67,68} accept

    # Allow access to the modem's web interface
    iif $iface_modem tcp dport {80,443} accept

    reject with icmpx type admin-prohibited
  }

  chain forward {
    type filter hook forward priority 0; policy drop;

    # forward from internal networks to everywhere else
    iifname $iface_internal accept

    # conntrack
    ct state established,related accept
    ct state invalid drop

    # ICMPv6
    oifname $iface_internal icmpv6 type {destination-unreachable, packet-too-big, time-exceeded, parameter-problem, echo-request, echo-reply} accept

    reject with icmpx type admin-prohibited
  }

  chain output {
    type filter hook output priority 0; policy accept;
  }

}
table ip nat {
  chain prerouting {
    type nat hook prerouting priority 0;
  }

  chain postrouting {
    type nat hook postrouting priority 0;

    # masquerade
    ip saddr $lan_net_v4 ip saddr != $fw_v4 masquerade

    # masquerade to webif
    ip saddr $lan_net_v4 ip daddr $webif_v4 masquerade
  }
}
